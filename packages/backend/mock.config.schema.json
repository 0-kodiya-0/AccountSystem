{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://example.com/schemas/mock-config.schema.json",
  "title": "Mock Configuration Schema",
  "description": "Schema for mock.config.json - Mock configuration for development and testing",
  "type": "object",
  "properties": {
    "email": {
      "$ref": "#/definitions/EmailMockConfig"
    },
    "oauth": {
      "$ref": "#/definitions/OAuthMockConfig"
    }
  },
  "required": ["email", "oauth"],
  "additionalProperties": false,
  "definitions": {
    "EmailMockConfig": {
      "type": "object",
      "description": "Email mock service configuration",
      "properties": {
        "logEmails": {
          "type": "boolean",
          "description": "Enable logging of email activities",
          "default": true
        },
        "simulateDelay": {
          "type": "boolean",
          "description": "Simulate network delays when sending emails",
          "default": false
        },
        "delayMs": {
          "type": "integer",
          "minimum": 0,
          "maximum": 10000,
          "description": "Delay in milliseconds (0-10000)",
          "default": 150
        },
        "simulateFailures": {
          "type": "boolean",
          "description": "Enable random email failures for testing",
          "default": false
        },
        "failureRate": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Probability of email failure (0.0-1.0)",
          "default": 0.1
        },
        "failOnEmails": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "email"
          },
          "description": "Email addresses that should always fail",
          "default": [],
          "examples": [
            ["fail@example.com", "error@test.com"]
          ]
        },
        "blockEmails": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "email"
          },
          "description": "Email addresses that should be blocked",
          "default": [],
          "examples": [
            ["blocked@example.com", "spam@test.com"]
          ]
        }
      },
      "required": [
        "logEmails",
        "simulateDelay",
        "delayMs",
        "simulateFailures",
        "failureRate",
        "failOnEmails",
        "blockEmails"
      ],
      "additionalProperties": false
    },
    "OAuthMockConfig": {
      "type": "object",
      "description": "OAuth mock service configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable OAuth mock service",
          "default": true
        },
        "simulateDelay": {
          "type": "boolean",
          "description": "Simulate network delays for OAuth requests",
          "default": false
        },
        "delayMs": {
          "type": "integer",
          "minimum": 0,
          "maximum": 10000,
          "description": "Delay in milliseconds for OAuth requests (0-10000)",
          "default": 1000
        },
        "simulateErrors": {
          "type": "boolean",
          "description": "Enable random OAuth errors for testing",
          "default": false
        },
        "errorRate": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Probability of OAuth error (0.0-1.0)",
          "default": 0.05
        },
        "mockAccounts": {
          "type": "array",
          "description": "Mock user accounts for testing OAuth flows",
          "items": {
            "$ref": "#/definitions/MockOAuthAccount"
          },
          "minItems": 1,
          "default": []
        },
        "failOnEmails": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "email"
          },
          "description": "Email addresses that should always fail OAuth authentication",
          "default": [],
          "examples": [
            ["fail@example.com", "oauth-error@test.com"]
          ]
        },
        "blockEmails": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "email"
          },
          "description": "Email addresses that should be blocked from OAuth",
          "default": [],
          "examples": [
            ["blocked@example.com", "oauth-blocked@test.com"]
          ]
        },
        "autoApprove": {
          "type": "boolean",
          "description": "Automatically approve OAuth requests without showing consent screen",
          "default": true
        },
        "requireConsent": {
          "type": "boolean",
          "description": "Show consent screen for OAuth requests (overrides autoApprove)",
          "default": false
        },
        "logRequests": {
          "type": "boolean",
          "description": "Enable logging of OAuth requests and responses",
          "default": true
        },
        "mockServerEnabled": {
          "type": "boolean",
          "description": "Enable the mock OAuth server endpoints",
          "default": true
        },
        "mockServerPort": {
          "type": "integer",
          "minimum": 1000,
          "maximum": 65535,
          "description": "Port for the mock OAuth server (if running separately)",
          "default": 8080
        }
      },
      "required": [
        "enabled",
        "simulateDelay",
        "delayMs",
        "simulateErrors",
        "errorRate",
        "mockAccounts",
        "failOnEmails",
        "blockEmails",
        "autoApprove",
        "requireConsent",
        "logRequests",
        "mockServerEnabled",
        "mockServerPort"
      ],
      "additionalProperties": false
    },
    "MockOAuthAccount": {
      "type": "object",
      "description": "A mock OAuth account for testing",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the mock account",
          "pattern": "^[a-zA-Z0-9_-]+$",
          "examples": ["mock_user_1", "test_admin", "demo_account"]
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "Email address of the mock account",
          "examples": ["test.user@example.com", "admin@company.com"]
        },
        "name": {
          "type": "string",
          "description": "Full display name of the account",
          "minLength": 1,
          "maxLength": 100,
          "examples": ["Test User", "John Doe", "Admin User"]
        },
        "firstName": {
          "type": "string",
          "description": "First name of the account holder (optional)",
          "maxLength": 50,
          "examples": ["Test", "John", "Admin"]
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the account holder (optional)",
          "maxLength": 50,
          "examples": ["User", "Doe", "User"]
        },
        "imageUrl": {
          "type": "string",
          "format": "uri",
          "description": "Profile image URL for the account (optional)",
          "examples": [
            "https://via.placeholder.com/150?text=Test+User",
            "https://example.com/avatar.jpg"
          ]
        },
        "emailVerified": {
          "type": "boolean",
          "description": "Whether the account's email is verified",
          "default": true
        },
        "provider": {
          "type": "string",
          "enum": ["google", "microsoft", "facebook"],
          "description": "OAuth provider for this account",
          "default": "google"
        },
        "accessToken": {
          "type": "string",
          "description": "Mock access token for API calls",
          "minLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$",
          "examples": ["mock_access_token_123456789", "test_token_abc"]
        },
        "refreshToken": {
          "type": "string",
          "description": "Mock refresh token for token renewal",
          "minLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$",
          "examples": ["mock_refresh_token_987654321", "test_refresh_xyz"]
        },
        "expiresIn": {
          "type": "integer",
          "minimum": 300,
          "maximum": 86400,
          "description": "Token expiry time in seconds (5 minutes to 24 hours)",
          "default": 3600,
          "examples": [3600, 7200, 1800]
        },
        "twoFactorEnabled": {
          "type": "boolean",
          "description": "Whether two-factor authentication is enabled for this account",
          "default": false
        },
        "status": {
          "type": "string",
          "enum": ["active", "suspended", "inactive"],
          "description": "Current status of the account",
          "default": "active"
        }
      },
      "required": [
        "id",
        "email",
        "name",
        "emailVerified",
        "provider",
        "accessToken",
        "refreshToken",
        "expiresIn"
      ],
      "additionalProperties": false,
      "examples": [
        {
          "id": "mock_user_1",
          "email": "test.user@example.com",
          "name": "Test User",
          "firstName": "Test",
          "lastName": "User",
          "imageUrl": "https://via.placeholder.com/150?text=Test+User",
          "emailVerified": true,
          "provider": "google",
          "accessToken": "mock_access_token_test_user_123456789",
          "refreshToken": "mock_refresh_token_test_user_987654321",
          "expiresIn": 3600,
          "twoFactorEnabled": false,
          "status": "active"
        }
      ]
    }
  }
}