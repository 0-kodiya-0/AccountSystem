{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://example.com/schemas/mock-config.schema.json",
  "title": "Mock Configuration Schema",
  "description": "Schema for mock.config.json - Mock configuration for development and testing",
  "type": "object",
  "properties": {
    "email": {
      "$ref": "#/definitions/EmailMockConfig"
    },
    "oauth": {
      "$ref": "#/definitions/OAuthMockConfig"
    },
    "accounts": {
      "$ref": "#/definitions/AccountsMockConfig"
    }
  },
  "required": ["email", "oauth", "accounts"],
  "additionalProperties": false,
  "definitions": {
    "EmailMockConfig": {
      "type": "object",
      "description": "Email mock service configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable or disable email mocking",
          "default": true
        },
        "logEmails": {
          "type": "boolean",
          "description": "Enable logging of email activities",
          "default": true
        },
        "simulateDelay": {
          "type": "boolean",
          "description": "Simulate network delays when sending emails",
          "default": false
        },
        "delayMs": {
          "type": "integer",
          "minimum": 0,
          "maximum": 10000,
          "description": "Delay in milliseconds (0-10000)",
          "default": 150
        },
        "simulateFailures": {
          "type": "boolean",
          "description": "Enable random email failures for testing",
          "default": false
        },
        "failureRate": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Probability of email failure (0.0-1.0)",
          "default": 0.1
        },
        "failOnEmails": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "email"
          },
          "description": "Email addresses that should always fail",
          "default": [],
          "examples": [["fail@example.com", "error@test.com"]]
        },
        "blockEmails": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "email"
          },
          "description": "Email addresses that should be blocked",
          "default": [],
          "examples": [["blocked@example.com", "spam@test.com"]]
        }
      },
      "required": [
        "enabled",
        "logEmails",
        "simulateDelay",
        "delayMs",
        "simulateFailures",
        "failureRate",
        "failOnEmails",
        "blockEmails"
      ],
      "additionalProperties": false
    },
    "OAuthMockConfig": {
      "type": "object",
      "description": "OAuth mock service configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable OAuth mock service",
          "default": true
        },
        "simulateDelay": {
          "type": "boolean",
          "description": "Simulate network delays for OAuth requests",
          "default": false
        },
        "delayMs": {
          "type": "integer",
          "minimum": 0,
          "maximum": 10000,
          "description": "Delay in milliseconds for OAuth requests (0-10000)",
          "default": 1000
        },
        "simulateErrors": {
          "type": "boolean",
          "description": "Enable random OAuth errors for testing",
          "default": false
        },
        "errorRate": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Probability of OAuth error (0.0-1.0)",
          "default": 0.05
        },
        "failOnEmails": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "email"
          },
          "description": "Email addresses that should always fail OAuth authentication",
          "default": [],
          "examples": [["fail@example.com", "oauth-error@test.com"]]
        },
        "blockEmails": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "email"
          },
          "description": "Email addresses that should be blocked from OAuth",
          "default": [],
          "examples": [["blocked@example.com", "oauth-blocked@test.com"]]
        },
        "autoApprove": {
          "type": "boolean",
          "description": "Automatically approve OAuth requests without showing consent screen",
          "default": true
        },
        "requireConsent": {
          "type": "boolean",
          "description": "Show consent screen for OAuth requests (overrides autoApprove)",
          "default": false
        },
        "logRequests": {
          "type": "boolean",
          "description": "Enable logging of OAuth requests and responses",
          "default": true
        },
        "mockServerEnabled": {
          "type": "boolean",
          "description": "Enable the mock OAuth server endpoints",
          "default": true
        },
        "mockServerPort": {
          "type": "integer",
          "minimum": 1000,
          "maximum": 65535,
          "description": "Port for the mock OAuth server (if running separately)",
          "default": 8080
        },
        "providers": {
          "type": "object",
          "description": "OAuth provider configurations",
          "properties": {
            "google": {
              "$ref": "#/definitions/OAuthProviderConfig"
            },
            "microsoft": {
              "$ref": "#/definitions/OAuthProviderConfig"
            },
            "facebook": {
              "$ref": "#/definitions/OAuthProviderConfig"
            }
          },
          "additionalProperties": false
        }
      },
      "required": [
        "enabled",
        "simulateDelay",
        "delayMs",
        "simulateErrors",
        "errorRate",
        "failOnEmails",
        "blockEmails",
        "autoApprove",
        "requireConsent",
        "logRequests",
        "mockServerEnabled",
        "mockServerPort"
      ],
      "additionalProperties": false
    },
    "OAuthProviderConfig": {
      "type": "object",
      "description": "Configuration for a specific OAuth provider",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable this OAuth provider",
          "default": true
        }
      },
      "required": ["enabled"],
      "additionalProperties": false
    },
    "AccountsMockConfig": {
      "type": "object",
      "description": "Mock accounts configuration for testing",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable mock accounts seeding",
          "default": true
        },
        "clearOnSeed": {
          "type": "boolean",
          "description": "Clear existing mock accounts before seeding",
          "default": false
        },
        "accounts": {
          "type": "array",
          "description": "Mock user accounts for testing",
          "items": {
            "$ref": "#/definitions/MockAccount"
          },
          "minItems": 0,
          "default": []
        }
      },
      "required": ["enabled", "accounts"],
      "additionalProperties": false
    },
    "MockAccount": {
      "type": "object",
      "description": "A mock user account for testing",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the mock account",
          "pattern": "^[a-zA-Z0-9_-]+$",
          "examples": ["account_1", "test_admin", "demo_user"]
        },
        "accountType": {
          "type": "string",
          "enum": ["local", "oauth"],
          "description": "Type of account (local or oauth)",
          "default": "oauth"
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "Email address of the mock account",
          "examples": ["test.user@example.com", "admin@company.com"]
        },
        "name": {
          "type": "string",
          "description": "Full display name of the account",
          "minLength": 1,
          "maxLength": 100,
          "examples": ["Test User", "John Doe", "Admin User"]
        },
        "firstName": {
          "type": "string",
          "description": "First name of the account holder",
          "maxLength": 50,
          "examples": ["Test", "John", "Admin"]
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the account holder",
          "maxLength": 50,
          "examples": ["User", "Doe", "User"]
        },
        "username": {
          "type": "string",
          "description": "Username for local accounts",
          "minLength": 3,
          "maxLength": 30,
          "pattern": "^[a-zA-Z0-9_-]+$",
          "examples": ["testuser", "johndoe", "admin"]
        },
        "imageUrl": {
          "type": "string",
          "format": "uri",
          "description": "Profile image URL for the account",
          "examples": ["https://via.placeholder.com/150?text=Test+User", "https://example.com/avatar.jpg"]
        },
        "emailVerified": {
          "type": "boolean",
          "description": "Whether the account's email is verified",
          "default": true
        },
        "provider": {
          "type": "string",
          "enum": ["google", "microsoft", "facebook"],
          "description": "OAuth provider for this account (required for oauth accounts)"
        },
        "password": {
          "type": "string",
          "description": "Password for local accounts (will be hashed)",
          "minLength": 8,
          "examples": ["TestPassword123!", "SecurePass456!"]
        },
        "twoFactorEnabled": {
          "type": "boolean",
          "description": "Whether two-factor authentication is enabled for this account",
          "default": false
        },
        "status": {
          "type": "string",
          "enum": ["active", "suspended", "inactive", "unverified"],
          "description": "Current status of the account",
          "default": "active"
        },
        "birthdate": {
          "type": "string",
          "format": "date",
          "description": "Date of birth in YYYY-MM-DD format",
          "examples": ["1990-01-15", "1985-12-25"]
        }
      },
      "required": ["id", "email", "name", "accountType", "emailVerified"],
      "additionalProperties": false,
      "if": {
        "properties": {
          "accountType": {
            "const": "oauth"
          }
        }
      },
      "then": {
        "required": ["provider"]
      },
      "else": {
        "required": ["password"]
      },
      "examples": [
        {
          "id": "account_1",
          "accountType": "oauth",
          "email": "test.user@example.com",
          "name": "Test User",
          "firstName": "Test",
          "lastName": "User",
          "imageUrl": "https://via.placeholder.com/150?text=Test+User",
          "emailVerified": true,
          "provider": "google",
          "twoFactorEnabled": false,
          "status": "active"
        },
        {
          "id": "account_2",
          "accountType": "local",
          "email": "local.user@example.com",
          "name": "Local User",
          "firstName": "Local",
          "lastName": "User",
          "username": "localuser",
          "password": "SecurePassword123!",
          "emailVerified": true,
          "twoFactorEnabled": false,
          "status": "active"
        }
      ]
    }
  }
}
